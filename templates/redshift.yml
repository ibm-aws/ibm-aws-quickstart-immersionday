AWSTemplateFormatVersion: 2010-09-09
Description: IBM AWS immerssionday redshift cluster 
Parameters:
  VPCID:
    Type: String
    Type: AWS::EC2::VPC::Id
    Description: RedShift cluster VPC
    Default: vpc-03738f32953df603f
  PublicSubnet1ID:
    Description: The ID of the public subnet in Availability Zone 1.
    Type: String
    Default: "subnet-068bc9661bea107d1"
  PublicSubnet2ID:
    Description: The ID of the public subnet in Availability Zone 2.
    Type: String
    Default: "subnet-05a6043f88f7c2461"
  PublicSubnet3ID:
    Description: The ID of the public subnet in Availability Zone 3.
    Type: String
    Default: "subnet-0a3646c21243f87f9"
  RedshiftClusterName:
    Type: String
    Description: Redshift cluster name
    Default: ImmersiondayRedshiftCluster
  RedshiftDBName:
    Type: String
    Description: Redshift atabase name
    Default: immersiondaydb
  RedshiftPort:
    Description: TCP/IP Port for the Redshift db Instance
    Type: Number
    Default: 5439
    ConstraintDescription: 'Must be in the range [1150-65535]'
    MinValue: 1150
    MaxValue: 65535
  RedshiftMasterUsername:
    Type: String
    Description: Master user name for Redshift
    Default: immersiondaydb
  RedshiftMasterPassword:
    Type: String
    Description: Master password for Redshift  (Password string should have mix of uppercase, lowercase and numbers)
    Default: IbmAwsImmersionday!23
    NoEcho: true
  NodeType:
    Default: dc2.large
    AllowedValues:
      - ra3.xplus
      - ra3.4xlarge
      - ra3.16xlarge
      - dc2.large
      - dc2.8xlarge
      - ds2.xlarge
      - ds2.8xlarge
    ConstraintDescription: Must contain valid instance type
    Description: The EC2 instance type for the OpenShift master instances.
    Type: String
  RedshiftNodeCount:
    Type: Number
    Description: Number of Redshift nodes
    Default: 1
    MinValue: 1
    ConstraintDescription: Must be a number greater or equal to 1
  BootNodeAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access boot node instance. We recommend that you set this value to a trusted IP range. The value `0.0.0.0/0` permits all IP addresses to access. Additional values can be added post-deployment from the Amazon EC2 console.
    Type: String
Conditions:
  SingleNode: !Equals [ !Ref RedshiftNodeCount, 1 ]
Resources:
  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    Properties:
      ClusterIdentifier: !Ref RedshiftClusterName
      ClusterSubnetGroupName: !Ref RedshiftClusterSubnetGroup
      ClusterType: !If [ SingleNode, single-node, multi-node ]  
      NumberOfNodes: !If [ SingleNode, !Ref 'AWS::NoValue', !Ref RedshiftNodeCount ] #'
      DBName: !Sub ${RedshiftDBName}
      IamRoles:
        - !GetAtt S3BucketAccessRole.Arn
      MasterUserPassword: !Ref RedshiftMasterPassword
      MasterUsername: !Ref RedshiftMasterUsername
      PubliclyAccessible: true
      NodeType: !Ref NodeType
      Port: !Ref RedshiftPort
      VpcSecurityGroupIds:
        - !Sub ${RedshiftSecurityGroup}
  S3BucketAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - redshift.amazonaws.com
            Action:
              - sts:AssumeRole
  S3BucketRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join
            - '-'
            - - S3BucketRolePolicy
              - !Ref "AWS::StackName"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action: s3:ListAllMyBuckets
            Resource: arn:aws:s3:::*
          -
            Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource: '*'
          -
            Effect: Allow
            Action: cloudwatch:*
            Resource: "*"
      Roles:
        - !Ref S3BucketAccessRole  
  RedshiftClusterSubnetGroup:
    Type: AWS::Redshift::ClusterSubnetGroup
    Properties:
      Description: Cluster subnet group
      SubnetIds:
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
        - !Ref PublicSubnet3ID
  RedshiftSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: JDBC port
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        -
          CidrIp: !Ref BootNodeAccessCIDR
          FromPort: !Ref RedshiftPort
          ToPort: !Ref RedshiftPort
          IpProtocol: tcp
          Description: IP address for your dev machine
        -
          SourceSecurityGroupId: !Ref AccessToRedshiftSecurityGroup
          FromPort: !Ref RedshiftPort
          ToPort: !Ref RedshiftPort
          IpProtocol: tcp
          Description: Access to redshift  
  AccessToRedshiftSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Redshift access
      VpcId: !Ref VPCID
  InternalSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !Ref RedshiftSecurityGroup
      GroupId: !Ref RedshiftSecurityGroup
  RedshiftSecrets:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: "RedshiftImmerssiondaySecrets"
      SecretString: !Sub 
        - '{"RedshiftEndpoint":"${RedshiftEndpoint}", "RedshiftPort":"${RedshiftPort}", "RedshiftMasterUsername":"${RedshiftMasterUsername}","RedshiftMasterPassword":"${RedshiftMasterPassword}","RedshiftDBName":"${RedshiftDBName}"}'
        - {RedshiftEndpoint: !Sub "${RedshiftCluster.Endpoint.Address}", RedshiftPort: !Ref RedshiftPort, RedshiftMasterUsername: !Ref RedshiftMasterUsername, RedshiftMasterPassword: !Ref RedshiftMasterPassword, RedshiftDBName: !Ref RedshiftDBName}

Outputs:
  RedshiftClusterEndpointAddress:
    Description: Redshift Cluster Endpoint Address
    Value: !Sub "${RedshiftCluster.Endpoint.Address}"
  RedshiftDBName:
    Description: Redshift DB name
    Value: !Ref RedshiftDBName
  RedshiftMasterUsername:
    Description: Redshift master user name
    Value: !Ref RedshiftMasterUsername
  RedshiftDBSecrets:
    Description: Redshift secrets
    Value: !Ref RedshiftSecrets
  RedshiftJDBCString:
    Description: Redshift JDBC string
    Value:
      Fn::Join:
        - ""
        - - 'jdbc:redshift://'
          - !GetAtt RedshiftCluster.Endpoint.Address
          - ':'
          - !Ref RedshiftPort
          - '/'
          - !Sub ${RedshiftDBName}
